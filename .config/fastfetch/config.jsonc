//
//
//
{
    "$schema": "https://github.com/fastfetch-cli/fastfetch/raw/dev/doc/json_schema.json",

    "multithreading": true,         // Acelera o processo - acelerate process
    
    "logo": {
        "type": "chafa",
        "source": "/home/jkyon/Pictures/ArchLinuxMedias/ArchLinux-logo.png",
        // "dither": "ordered",
        "width":  40,
        "height": 20,
        "padding": { 
            "left": 2,
            "right": 2
        }
    },
    
    "display": {
        "separator": "    ",
        "color": "white"
    },

    "modules": [
        {
            "type": "custom", // Software
            "format": "┌────────────────────────────── \u001b[1m Software \u001b[0m ─────────────────────────────┐", // `\u001b` is `\033`, or `\e`
            "key": " "
        },
        {
            "type": "os",
            "key": "  " // Just get your distro's logo off nerdfonts.com,
        },
        {
            "type": "kernel",
            "key": "  ",
            "format": "{1} {2}"
        },
        {
            "type": "command",
            "key": "  ",
            "text": "sh /home/jkyon/ShellScript/fastfetchCustomTerminal.sh"
        },
        {
            "type": "editor",
            "key": "  ",
            "format": "AstroNvim ({2} {5})"
        },
        {
            "type": "wm",
            "key": "  "
        },
        {
            "type": "command",
            "key": "  󰓃",
            "text": " pipewire --version | awk 'NR==1 {printf \"%s \", $1} NR==2 {print $4}' "
        },
        {
            "type": "command",
            "key": "  ",
            "text": " btrfs --version | awk 'NR==1 {print \"BtrFS\", $2}' "
        },
        // {
        //     "type": "command",
        //     "key": "  ",
        //     "text": "openrc --version | awk '{gsub(/[()]/, \"\", $2); print $2, $3}'"
        // },
        {
            "type": "initsystem",
            "key": "  "
        },
        {
            "type": "command",
            "key": "  󱕵",
            "text": " sudo --version | awk 'NR==1 {print $1, $3 }' "
        },
        {
            "type": "command",
            "key": "  󱫠",
            "text": " sh -c 'grub-install --version | awk \"{print \\$2, \\$3}\" | awk \"{gsub(/\\(|\\)/,\\\"\\\"); print \\$1, \\$2}\"' "
        },
        {
            "type": "custom", // Theme
            "format": "├─────────────────────────────── \u001b[1m Theme \u001b[0m ───────────────────────────────┤",
            "key": " "
        },
        {
            "type": "theme",
            "key": "  ",
            "format": "{2}"
        },
        {
            "type": "icons",
            "key": "  󰉋",
            "format": "{2}"
        },
        {
            "type": "font",
            "key": "  ",
            "format": "{2}"
        },
        {
            "type": "cursor",
            "key": "  󰇀"
        },
        {
            "type": "custom", // Hardware
            "format": "├────────────────────────────── \u001b[1m Hardware \u001b[0m ─────────────────────────────┤",
            "key": " "
        },
        {
            "type": "cpu",
            "key": "  "
        },
        {
            "type": "memory",
            "key": "  ",
            "format": "Corsair Vengeance - {1} / {2} ({3})"
        },
        {
            "type": "gpu",
            "detectionMethod": "pci",
            "key": "  󰢮"
        },
        {
            "type": "board",
            "key": "  󰚗"
        },
        {
            "type": "disk",
            "key": "  ",
            "percent": {},
            "format": "{10} - {1} / {2} - ({3}) - {9}"
        },
        {
            "type": "custom", // Peripheral
            "format": "├───────────────────────────── \u001b[1m Peripheral \u001b[0m ────────────────────────────┤",
            "key": " "
        },
        {
            "type": "custom",
            "key": "  ",
            "format": "HyperX Alloy Origins Core (tkl)"
        },
        {
            "type": "custom",
            "key": "  󰃬",
            "format": "Exbom BK-N30"
        },
        {
            "type": "custom",
            "key": "  󰍽",
            "format": "Logitech G403"
        },
        {
            "type": "custom",
            "key": "  ",
            "format": "JBL T290 (in-Ear)"
        },
        {
            "type": "display",
            "key": "  󱄄",
            "format": "{6} - {1}x{2} @ {3}",
            "preciseRefreshRate": false
        },
        {
            "type": "custom", // Uptime
            "format": "|─────────────────────────────── \u001b[1m Uptime \u001b[0m ──────────────────────────────|",
            "key": " "
        },
        {
            "type": "command",
            "key": "  ",
            "text": "whoami"
        },
        {
            "type": "command",
            "key": "  󰪫",
            "text": "uname -n"
        },
        {
            "type": "packages",
            "key": "  "
        },
        {
            "type": "command",
            "key": "  ",
            "text": "birth_install=$(stat -c %W /); current=$(date +%s); time_progression=$((current - birth_install)); days_difference=$((time_progression / 86400)); echo $days_difference days"
        },
        {
            "type": "uptime",
            "key": "  "
            //"keyColor": "magenta"
        },
        {
            "type": "localip",
            "key": "  󰌗",
            "format": "{1}"
        },
        {
            "type": "custom", // InformationEnd
            "format": "└───────────────────────────────────────────────────────────────────────┘",
            "key": " "
        },
        {
            "type": "colors",
            "paddingLeft": 2,
            "symbol": "circle"
        },
        // {
        //     "type": "custom",
        //     "format": "\u001b[1m \n              ________                              __  ___           __    _          \n             /_  __/ /_  ___  ________  __  _______/  |/  /___ ______/ /_  (_)___  ___  \n              / / / __ \\/ _ \\/ ___/ _ \\/ / / / ___/ /|_/ / __ `/ ___/ __ \\/ / __ \\/ _ \\ \n             / / / / / /  __(__  )  __/ /_/ (__  ) /  / / /_/ / /__/ / / / / / / /  __/ \n            /_/ /_/ /_/\\___/____/\\___/\\__,_/____/_/  /_/\\__,_/\\___/_/ /_/_/_/ /_/\\___/  \n                        \u001b[0m",
        //     "key": " "
        // },
        {
            "type": "custom",
            "format": "\u001b[1m\n             _    ___                                  ___   _____  \n            | |  / (_)___  _____ __  ____  _____      / __ \\/ ____/  \n            | | / / / __ `/ __ `__ \\/ __ `/ ___/_____/ /_/ / /       \n            | |/ / / /_/ / / / / / / /_/ / /  /_____/ ____/ /___     \n            |___/_/\\__,_/_/ /_/ /_/\\__,_/_/        /_/    \\____/    \n\u001b[0m",
            "key": " "
        }
    ]
}